
::Myco::FileToplevel < ::Myco::Object {
  
  dirname:  component.instance_variable_get("@dirname")
  basename: component.instance_variable_get("@basename")
  filename: component.instance_variable_get("@filename")
  
  [decorators]
  
  # Run the code in the given file, ignoring the return value but
  # importing the constants defined therein into the current namespace.
  import: Decorator {
    apply: |meme, *args| {
      # TODO: shouldn't have to use meme.target here;
      # should be able to use 'parent' to reach the outer objects
      # while still referring to distinct instances rather than the originals.
      load_paths = [meme.target.instance.dirname]
      component = Myco.eval_file(meme.name.to_s, load_paths, false)
      meme.target.include(component)
    }
  }
}
