
CodeTools::AST << {
  
  DeclareMeme < Node {
    node_type meme
    field name, field decorations, field parameters, field body
    
    setter name: |x|
      x.value
    setter decorations: |x|
      x || ArrayAssembly.new(line:line, body:[])
    setter parameters: |x|
      x || ParameterAssembly.new(line:line, required:[], rest:RestParameter.new(line:line))
    setter body: |x|
      x || NullLiteral.new(line:line)
    
    bytecode: |g| evaluate_bytecode(g)
    
    data_body_implementation: BlockLiteral.new(
      line: self.line
      block: Block.new(
        line:       self.line
        parameters: self.parameters
        body:       self.body
      )
    )
    
    # TODO: don't be redundant with data_bytecode
    data_array: [:meme,
      self.name,
      self.decorations.body.map(&:data_array),
      self.data_body_implementation, # TODO: body implementation as actual data
    ]
    
    data_bytecode: |g| {
      pos(g)
      
      g.push_literal(:meme)
      g.push_literal(self.name)
        self.decorations.body.each |item| { item.data_bytecode(g) }
      g.make_array(self.decorations.body.size)
      data_body_implementation.bytecode(g)
      g.make_array(4)
    }
  }
  
}
