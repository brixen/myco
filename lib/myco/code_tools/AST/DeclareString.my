
CodeTools::AST << {
  
  DeclareString < Node {
    node_type declstr
    field types, field string
    
    implementation: InvokeMethod.new(
      line:      self.string.line
      name:      :from_string
      arguments: ArgumentAssembly.new(
        line:      self.string.line,
        body:      [self.string]
      )
      receiver:  DeclareObject.new(
        line:      self.line
        types:     self.types
        body:      Sequence.new(line: self.line, array: [])
      )
    )
    
    # TODO: remove old bytecode definition
    bytecode: |g| pos(g); implementation.bytecode(g)
    
    # TODO: don't be redundant with data_bytecode
    data_array: [:from_string,
      self.line,
      self.types.body.map |item| { item.data_array },
      self.string.to_literal,
    ]
    
    data_bytecode: |g| {
      g.push_literal(:from_string)
      g.push_literal(self.line)
        self.types.body.each |item| { item.data_bytecode(g) }
      g.make_array(self.types.body.count)
      self.string.bytecode(g)
      g.make_array(4)
    }
  }
  
}
