
CodeTools::AST << {
  
  # Helper methods for bytecode generation
  CodeTools::Generator << {
    push_myco: push_cpath_top; find_const(:Myco)
    push_void: push_myco;      find_const(:Void)
    push_null: push_nil
    push_loc: |loc|
      push_literal(loc[0]); push_literal(loc[1]); make_array(2)
  }
  
  Self < Node {
    const is_data: true
    bytecode: |g| pos(g); g.push_self
  }
  
  Null < Node {
    const is_data: true
    bytecode: |g| pos(g); g.push_null
  }
  
  Void < Node {
    const is_data: true
    bytecode: |g| pos(g); g.push_void
  }
  
  True < Node {
    const is_data: true
    bytecode: |g| pos(g); g.push_true
  }
  
  False < Node {
    const is_data: true
    bytecode: |g| pos(g); g.push_false
  }
  
  # Used in situations where no locator is available (like an empty file)
  NoLocator < BasicObject {
    var row: 1
    var col: 1
  }
  
  # TODO: use some other way to be eager
  EVALUATE_NOW: CodeTools::AST.component_eval {
    constants.select |const_name| { const_get(const_name) < Node }
             .each   |const_name| {
      component = const_get(const_name)
      node_type = component.node_type
      fields    = component.fields
      
      BuilderMethods.declare_meme(node_type) |*args| {
        loc = args.shift
        loc = loc.?loc ?? [loc.row, loc.col]
        kw = [:loc, *fields].zip([loc, *args])
        component.new(kw.to_h)
      }
    }
    
    component = NoLocator
    BuilderMethods.declare_meme(:no_loc) |*args| {
      component.new
    }
  }
}
