
CodeTools::AST::Node << {
  
  Quest < Node {
    field invoke
    
    const is_data: true
    
    bytecode: |g| {
      pos(g)
      
      invoke = self.invoke.implementation
      
      ##
      # if Rubinius::Type.object_respond_to?(invoke.receiver, invoke.name)
      #   execute_statement invoke
      # else
      #   return void
      # end
      
      else_label = g.new_label
      end_label  = g.new_label
      
      invoke.receiver_bytecode(g)
        g.dup_top # dup the receiver to save it for later
      g.push_type; g.swap
        g.push_literal(invoke.name)
      g.send(:"object_respond_to?", 2)
      g.goto_if_false(else_label)
      
      # The duped receiver is still at the top of the stack,
      # and invoke.receiver has been set to an instance of FakeReceiver
      # to let the true receiver pass through instead.
      invoke.send_bytecode(g)
      g.goto(end_label)
      
      else_label.set!
      g.pop # pop the duped receiver - it won't be used after all
      g.push_void
      
      end_label.set!
    }
  }
  
}
