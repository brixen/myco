
CodeTools::AST << {
  
  ConstantAccessScoped < Node, BasicObject {
    var parent, var name
    
    Form: [:colon2, :parent, :name]
    
    bytecode: |g| {
      pos(g)
      
      handled = false # TODO: better elsif construction here
      (self.parent.is_a?(ConstantAccess) && parent.name == :"Rubinius") && (
        self.name == :"Type"   && (handled = true; g.push_type)
        self.name == :"Mirror" && (handled = true; g.push_mirror)
      )
      handled || (
        self.parent.bytecode(g)
        g.find_const(self.name)
      )
    }
    
    assign_bytecode: |g, value| {
      pos(g)
      
      value.bytecode(g)
      g.push_literal(self.name)
      self.parent.bytecode(g)
      g.rotate(3)
    }
  }
}
