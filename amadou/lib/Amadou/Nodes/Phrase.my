
Amadou << {
  Nodes << {
    
    Phrase < Base {
      const is_phrase?: true
      
      static from: |list, delim=null| new(list: list, delim: delim)
      var list: []
      var delim: null
      
      any_terms?: list.size > 1
      first_term: term_at(0)
      terms:      list.select(&:is_term?)
      
      term_at:  |idx| list[idx * 2 + 1]
      space_at: |idx| list[idx * 2 + 1]
      
      term_count:  (list.size - 1) / 2
      space_count: (list.size + 1) / 2
      
      subphrase: |start, finish=null| {
        range = Ruby::Range.new(start * 2, (finish &? finish * 2 ?? -1))
        Phrase.from(list[range], delim)
      }
      
      representation: [:phrase,
        list.map(&:representation),
        delim.?representation ?? null,
      ]
    }
    
  }
}
